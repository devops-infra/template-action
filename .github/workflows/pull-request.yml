name: Pull Request

on:
  push:
    branches-ignore:
      - master
      - 'dependabot**'

permissions:
  contents: read
  packages: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Task
        uses: arduino/setup-task@v2.0.0
        with:
          version: 3.x

      - name: Install Task
        uses: arduino/setup-task@v2.0.0
        with:
          version: 3.x

      - name: Run linters
        run: task lint

  build-and-push:
    name: Build & Push test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Task
        uses: arduino/setup-task@v2.0.0
        with:
          version: 3.x

      - name: Extract branch name
        id: branch
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BRANCH_NAME="${{ github.head_ref }}"
          else
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          fi
          # Sanitize branch name for Docker tag (replace special chars with -)
          SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "name=$SANITIZED_BRANCH" >> $GITHUB_OUTPUT
          echo "Branch name: $BRANCH_NAME -> Docker tag: test-$SANITIZED_BRANCH"

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: amd64,arm64

      - name: Build and push test image
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.branch.outputs.name }}
          VERSION_PREFIX: test-
          TERM: xterm-256color
        run: task docker:push

  self-test:
    name: Self-test Action
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Run action from source
        id: run
        uses: './'
        with:
          foobar: hello
          debug: 'false'

      - name: Verify outputs
        run: |
          test "${{ steps.run.outputs.foobar }}" = "hello"
          test "${{ steps.run.outputs.barfoo }}" = "hello"

  pull-request:
    name: Pull Request
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Template
        shell: bash
        run: |
          mkdir -p .tmp
          curl -LsS https://raw.githubusercontent.com/devops-infra/.github/master/PULL_REQUEST_TEMPLATE.md -o .tmp/PULL_REQUEST_TEMPLATE.md

      - name: Create Pull Request
        uses: devops-infra/action-pull-request@v0.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          assignee: ${{ github.actor }}
          template: .tmp/PULL_REQUEST_TEMPLATE.md
          get_diff: true
